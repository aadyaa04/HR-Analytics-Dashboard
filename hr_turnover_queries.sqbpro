<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/aadya/OneDrive/hr_turnover.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1688"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="0" parent="0"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="Employees_clean" custom_title="0" dock_id="2" table="4,15:mainEmployees_clean"/><dock_state state="000000ff00000000fd00000001000000020000043c000002b6fc0100000002fb000000160064006f0063006b00420072006f00770073006500310100000000ffffffff0000000000000000fb000000160064006f0063006b00420072006f007700730065003201000000000000043c0000013300ffffff000002580000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Employees_clean" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="106"/><column index="2" value="94"/><column index="3" value="98"/><column index="4" value="131"/><column index="5" value="99"/><column index="6" value="85"/><column index="7" value="53"/><column index="8" value="127"/><column index="9" value="93"/><column index="10" value="54"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1*">-- drop view if it already exists (safe)
DROP TABLE VIEW IF EXISTS Employees_clean;

-- create a view with friendly column names
CREATE VIEW Employees_clean AS
SELECT
  satisfaction_level,
  last_evaluation,
  number_project,
  average_montly_hours   AS average_monthly_hours,  -- fix typo here
  time_spend_company,
  work_accident,
  &quot;left&quot;                 AS left_flag,             -- avoid reserved word
  promotion_last_5years,
  sales                  AS department,
  salary
FROM Employees;
-- 1) Total employees
SELECT COUNT(*) AS total_employees FROM Employees_clean;

-- 2) How many left vs stayed
SELECT leftflag, COUNT(*) AS count_employees
FROM Employees_clean
GROUP BY leftflag;

-- 3) Avg satisfaction: left vs stayed
SELECT leftflag, ROUND(AVG(satisfaction_level),2) AS avg_satisfaction
FROM Employees_clean
GROUP BY leftflag;

-- 4) Avg last evaluation: left vs stayed
SELECT leftflag, ROUND(AVG(last_evaluation),2) AS avg_evaluation
FROM Employees_clean
GROUP BY leftflag;

-- 5) Attrition by department
SELECT department,
       SUM(CASE WHEN leftflag = 1 THEN 1 ELSE 0 END) AS employees_left,
       COUNT(*) AS total_in_dept,
       ROUND(100.0 * SUM(CASE WHEN leftflag = 1 THEN 1 ELSE 0 END) / COUNT(*), 2) AS attrition_rate_percent
FROM Employees_clean
GROUP BY department
ORDER BY attrition_rate_percent DESC;

-- 6) Attrition by salary level
SELECT salary,
       SUM(CASE WHEN leftflag = 1 THEN 1 ELSE 0 END) AS employees_left,
       COUNT(*) AS total_in_salary_group,
       ROUND(100.0 * SUM(CASE WHEN leftflag = 1 THEN 1 ELSE 0 END) / COUNT(*), 2) AS attrition_rate_percent
FROM Employees_clean
GROUP BY salary
ORDER BY attrition_rate_percent DESC;

-- 7) Avg monthly hours: left vs stayed
SELECT leftflag, ROUND(AVG(AverageMonthlyHours)) AS avg_monthly_hours
FROM Employees_clean
GROUP BY leftflag;

-- 8) Attrition by number of projects
SELECT numberprojects,
       SUM(CASE WHEN leftflag = 1 THEN 1 ELSE 0 END) AS employees_left,
       COUNT(*) AS total_employees,
       ROUND(100.0 * SUM(CASE WHEN leftflag = 1 THEN 1 ELSE 0 END) / COUNT(*), 2) AS attrition_rate_percent
FROM Employees_clean
GROUP BY numberprojects
ORDER BY numberprojects;

-- 9) Attrition by years at company
SELECT timeAtcompany,
       SUM(CASE WHEN leftflag = 1 THEN 1 ELSE 0 END) AS employees_left,
       COUNT(*) AS total_employees,
       ROUND(100.0 * SUM(CASE WHEN leftflag = 1 THEN 1 ELSE 0 END) / COUNT(*), 2) AS attrition_rate_percent
FROM Employees_clean
GROUP BY timeAtcompany
ORDER BY timeatcompany;

-- 10) Effect of promotions on attrition
SELECT promotionlast5years,
       SUM(CASE WHEN leftflag = 1 THEN 1 ELSE 0 END) AS employees_left,
       COUNT(*) AS total_employees,
       ROUND(100.0 * SUM(CASE WHEN leftflag = 1 THEN 1 ELSE 0 END) / COUNT(*), 2) AS attrition_rate_percent
FROM Employees_clean
GROUP BY promotionlast5years;
</sql><current_tab id="0"/></tab_sql></sqlb_project>
